@page "/profiles/create"
@using Microsoft.EntityFrameworkCore
@using DatingAppFSDProject.Domain
@inject IDbContextFactory<DatingApp.Data.DatingAppContext> DbFactory
@inject NavigationManager NavigationManager

<PageTitle>Create</PageTitle>

<h1>Create</h1>

<h2>Profile</h2>
<hr />
<div class="row">
    <div class="col-md-4">
        <EditForm method="post" Model="Profile" OnValidSubmit="AddProfile" FormName="create" Enhance>
            <DataAnnotationsValidator />
            <ValidationSummary class="text-danger" role="alert"/>
            <div class="mb-3">
                <label for="visible" class="form-label">Visible:</label> 
                <InputCheckbox id="visible" @bind-Value="Profile.Visible" class="form-check-input" /> 
                <ValidationMessage For="() => Profile.Visible" class="text-danger" /> 
            </div>        
            <div class="mb-3">
                <label for="blockeduser" class="form-label">BlockedUser:</label> 
                <InputText id="blockeduser" @bind-Value="Profile.BlockedUser" class="form-control" /> 
                <ValidationMessage For="() => Profile.BlockedUser" class="text-danger" /> 
            </div>        
            <div class="mb-3">
                <label for="userid" class="form-label">UserId:</label> 
                <InputNumber id="userid" @bind-Value="Profile.UserId" class="form-control" /> 
                <ValidationMessage For="() => Profile.UserId" class="text-danger" /> 
            </div>        
            <div class="mb-3">
                <label for="settingid" class="form-label">SettingId:</label> 
                <InputNumber id="settingid" @bind-Value="Profile.SettingId" class="form-control" /> 
                <ValidationMessage For="() => Profile.SettingId" class="text-danger" /> 
            </div>        
            <button type="submit" class="btn btn-primary">Create</button>
        </EditForm>
    </div>
</div>

<div>
    <a href="/profiles">Back to List</a>
</div>

@code {
    [SupplyParameterFromForm]
    private Profile Profile { get; set; } = new();

    // To protect from overposting attacks, see https://learn.microsoft.com/aspnet/core/blazor/forms/#mitigate-overposting-attacks.
    private async Task AddProfile()
    {
        using var context = DbFactory.CreateDbContext();
        context.Profile.Add(Profile);
        await context.SaveChangesAsync();
        NavigationManager.NavigateTo("/profiles");
    }
}
