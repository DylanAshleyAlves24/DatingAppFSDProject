@page "/reports/create"
@using Microsoft.EntityFrameworkCore
@using DatingAppFSDProject.Domain
@inject IDbContextFactory<DatingApp.Data.DatingAppContext> DbFactory
@inject NavigationManager NavigationManager

<PageTitle>Create</PageTitle>

<h1>Create</h1>

<h2>Report</h2>
<hr />
<div class="row">
    <div class="col-md-4">
        <EditForm method="post" Model="Report" OnValidSubmit="AddReport" FormName="create" Enhance>
            <DataAnnotationsValidator />
            <ValidationSummary class="text-danger" role="alert"/>
            <div class="mb-3">
                <label for="reason" class="form-label">Reason:</label> 
                <InputText id="reason" @bind-Value="Report.Reason" class="form-control" /> 
                <ValidationMessage For="() => Report.Reason" class="text-danger" /> 
            </div>        
            <div class="mb-3">
                <label for="datereported" class="form-label">DateReported:</label> 
                <InputDate id="datereported" @bind-Value="Report.DateReported" class="form-control" /> 
                <ValidationMessage For="() => Report.DateReported" class="text-danger" /> 
            </div>        
            <div class="mb-3">
                <label for="status" class="form-label">Status:</label> 
                <InputText id="status" @bind-Value="Report.Status" class="form-control" /> 
                <ValidationMessage For="() => Report.Status" class="text-danger" /> 
            </div>        
            <div class="mb-3">
                <label for="userid1" class="form-label">UserId1:</label> 
                <InputNumber id="userid1" @bind-Value="Report.UserId1" class="form-control" /> 
                <ValidationMessage For="() => Report.UserId1" class="text-danger" /> 
            </div>        
            <div class="mb-3">
                <label for="userid2" class="form-label">UserId2:</label> 
                <InputNumber id="userid2" @bind-Value="Report.UserId2" class="form-control" /> 
                <ValidationMessage For="() => Report.UserId2" class="text-danger" /> 
            </div>        
            <button type="submit" class="btn btn-primary">Create</button>
        </EditForm>
    </div>
</div>

<div>
    <a href="/reports">Back to List</a>
</div>

@code {
    [SupplyParameterFromForm]
    private Report Report { get; set; } = new();

    // To protect from overposting attacks, see https://learn.microsoft.com/aspnet/core/blazor/forms/#mitigate-overposting-attacks.
    private async Task AddReport()
    {
        using var context = DbFactory.CreateDbContext();
        context.Report.Add(Report);
        await context.SaveChangesAsync();
        NavigationManager.NavigateTo("/reports");
    }
}
