@implements IDisposable
@using DatingApp.Data
@using DatingAppFSDProject.Domain
@using Microsoft.AspNetCore.Identity
@using Microsoft.EntityFrameworkCore
@using System.Security.Claims;
@inject NavigationManager NavigationManager
@inject UserManager<DatingAppUser> UserManager
@inject IHttpContextAccessor HttpContextAccessor
@inject IServiceScopeFactory ServiceScopeFactory
@inject IDbContextFactory<DatingApp.Data.DatingAppContext> DbFactory


<div class="top-row ps-3 navbar navbar-dark">
    <div class="container-fluid">
        <a class="navbar-brand" href="">DatingApp</a>
    </div>
</div>

<input type="checkbox" title="Navigation menu" class="navbar-toggler" />

<div class="nav-scrollable" onclick="document.querySelector('.navbar-toggler').click()">
    <nav class="flex-column">
        <div class="nav-item px-3">
            <NavLink class="nav-link" href="" Match="NavLinkMatch.All">
                <span class="bi bi-house-door-fill-nav-menu" aria-hidden="true"></span> Home
            </NavLink>
        </div>

        <AuthorizeView>
            <Authorized>
                @if (currentUserRole == "Admin")
                {
                    <div class="nav-item px-3">
                        <NavLink class="nav-link" href="profiles">
                            <span class="bi bi-list-nested-nav-menu" aria-hidden="true"></span> Profiles
                        </NavLink>
                    </div> 
                    <div class="nav-item px-3">
                        <NavLink class="nav-link" href="/Admin/Users">
                            <span class="bi bi-list-nested-nav-menu" aria-hidden="true"></span> Users
                        </NavLink>
                    </div>
                }
                else
                {
                    <div class="nav-item px-3">
                        <NavLink class="nav-link" href="ProfileSetup">
                            <span class="bi bi-person-fill-nav-menu" aria-hidden="true"></span> Settings
                        </NavLink>
                    </div>
                    <div class="nav-item px-3">
                        <NavLink class="nav-link" href="profilesMatches">
                            <span class="bi bi-list-nested-nav-menu" aria-hidden="true"></span> Match
                        </NavLink>
                    </div>
                    <div class="nav-item px-3">
                        <NavLink class="nav-link" href="receivedRequests">
                            <span class="bi bi-list-nested-nav-menu" aria-hidden="true"></span> Request
                        </NavLink>
                    </div>
                    <div class="nav-item px-3">
                        <NavLink class="nav-link" href="messagesProfileScreen">
                            <span class="bi bi-list-nested-nav-menu" aria-hidden="true"></span> Messages
                        </NavLink>
                    </div>
                }

                @*  <div class="nav-item px-3">
                <form action="Account/Logout" method="post">
                <AntiforgeryToken />
                <input type="hidden" name="ReturnUrl" value="@currentUrl" />
                <button type="submit" class="nav-link">
                <span class="bi bi-arrow-bar-left-nav-menu" aria-hidden="true"></span> Logout
                </button>
                </form>
                </div> *@
                <div class="nav-item px-3">
                    <NavLink class="nav-link" href="/Account/Lockout">
                        <span class="bi bi-arrow-bar-left-nav-menu" aria-hidden="true"></span> Logout
                    </NavLink>
                </div>
            </Authorized>
            <NotAuthorized>
                <div class="nav-item px-3">
                    <NavLink class="nav-link" href="Account/Register">
                        <span class="bi bi-person-nav-menu" aria-hidden="true"></span> Register
                    </NavLink>
                </div>
                <div class="nav-item px-3">
                    <NavLink class="nav-link" href="Account/Login">
                        <span class="bi bi-person-badge-nav-menu" aria-hidden="true"></span> Login
                    </NavLink>
                </div>
            </NotAuthorized>
        </AuthorizeView>
    </nav>
</div>

@code {
    private string? currentUrl;
    private DatingAppUser? currentUser;
    private string? currentUserRole = "User"; // Default to User
    protected override async Task OnInitializedAsync()
    {
        currentUrl = NavigationManager.ToBaseRelativePath(NavigationManager.Uri);
        NavigationManager.LocationChanged += OnLocationChanged;
        await LoadUserRole();

       
    }
  
    private async Task LoadUserRole()
    {
        try
        {
            if (HttpContextAccessor.HttpContext.User.Identity.IsAuthenticated)
            {
                var email = HttpContextAccessor.HttpContext.User.Claims
                    .FirstOrDefault(c => c.Type == ClaimTypes.Name)?.Value ?? "Unknown";
                using var context = DbFactory.CreateDbContext(); // ✅ New instance for every operation
                var users= await context.Users.ToListAsync();
                currentUser = users.FirstOrDefault(s => s.Email == email);
                if (currentUser != null)
                {
                    currentUserRole = currentUser.Role;
                }

                
            }
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Error loading user role: {ex.Message}");
        }
    }

    private void OnLocationChanged(object? sender, LocationChangedEventArgs e)
    {
        currentUrl = NavigationManager.ToBaseRelativePath(e.Location);
        StateHasChanged();
    }

    public void Dispose()
    {
        NavigationManager.LocationChanged -= OnLocationChanged;
    }

}